@model RealEstateWebsite.Models.Employee

@{
    ViewBag.Title = "CreateEmp";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="row">

    <div class="col-lg-12">
        <h3 class="page-header">
            <i class="fa fa-laptop"></i>Create Employee
        </h3>
        <ol class="breadcrumb">
            <li>
                <i class="fa fa-home"></i>
                <a href="/Admin/Home/Index">Home</a>
            </li>
            <li>
                <i class="fa fa-laptop"></i>CreateEmployee
            </li>
        </ol>
    </div>
</div>


@using (Html.BeginForm("CreateEmp", "Adminstrator", FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data", @class = "dropzone dropzone-custom needsclick add-professors dz-clickable", @id = "demo1-upload", @novalidate = "novalidate" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-sm-10 form-group-md">
            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IDNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IDNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IDNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

          
            <div class="form-group">
                @Html.LabelFor(model => model.Avatar_URL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <label for="file">Upload Image:</label> <input type="file" name="image" multiple="multiple" />
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Manager_ID: ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" class="input-md form-control" name="manager_id" id="manager_id" value=" @Session["ID_User"]" autocomplete="off" readonly="readonly" >
                    @*@Html.TextBox("manager_id", @Session["ID_User"].ToString(), new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })*@
                    @* <input type="text" disabled ="disabled" value="3" name="manager_id" />*@

                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Account.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Account.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Account.UserName, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-2" })
                @*<div class="col-sm-12 col-sm-offset-3">*@
                <div class="col-md-10">


                    <input type="password" class="input-md form-control" name="password1" id="password1" placeholder="New Password" autocomplete="off">
                    <div class="row">
                        <div class="col-sm-6">
                            <span id="8char" class="glyphicon glyphicon-remove" style="color:#FF0004;"></span> 4 Characters Long<br>
                            @*<span id="ucase" class="glyphicon glyphicon-remove" style="color:#FF0004;"></span> One Uppercase Letter*@
                        </div>
                        @*<div class="col-sm-6">
                            <span id="lcase" class="glyphicon glyphicon-remove" style="color:#FF0004;"></span> One Lowercase Letter<br>
                            <span id="num" class="glyphicon glyphicon-remove" style="color:#FF0004;"></span> One Number
                        </div>*@
                    </div>


                </div><!--/row-->
            </div>
            <div class="form-group">
                @Html.Label("Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
                @*<div class="col-sm-12 col-sm-offset-3">*@
                <div class="col-md-10">


                    <input type="password" class="input-md form-control" name="password2" id="password2" placeholder="Confirm Password" autocomplete="off">
                    <div class="row">
                        <div class="col-md-10">
                            <span id="pwmatch" class="glyphicon glyphicon-remove" style="color:#FF0004;"></span> Passwords Match
                        </div>
                    </div>



                </div><!--/row-->
            </div>


            <div class="form-group">
                @Html.Label("Role", htmlAttributes: new { @class = "control-label col-md-2" })
                @try
                {
                    <div class="col-md-10">
                        @Html.DropDownList("RoleAcc", new SelectList(ViewBag.roleList), new { @class = "form-control" })

                    </div>
                }
                catch { }


            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" id="btnSubmit" class="btn btn-primary" />

                </div>

            </div>
            <a href="@Url.Action("ViewEmp", "Adminstrator")" class="btn btn-button-primary">Back to View Employees</a>

        </div>
        </div>
}

<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js"></script>
<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>


<script>
$("input[type=password]").keyup(function () {
    var ucase = new RegExp("[A-Z]+");
    var lcase = new RegExp("[a-z]+");
    var num = new RegExp("[0-9]+");

    if($("#password1").val().length >= 4){
    	$("#8char").removeClass("glyphicon-remove");
    	$("#8char").addClass("glyphicon-ok");
    	$("#8char").css("color","#00A41E");
    }else{
    	$("#8char").removeClass("glyphicon-ok");
    	$("#8char").addClass("glyphicon-remove");
    	$("#8char").css("color","#FF0004");
    }

    //if(ucase.test($("#password1").val())){
    //	$("#ucase").removeClass("glyphicon-remove");
    //	$("#ucase").addClass("glyphicon-ok");
    //	$("#ucase").css("color","#00A41E");
    //}else{
    //	$("#ucase").removeClass("glyphicon-ok");
    //	$("#ucase").addClass("glyphicon-remove");
    //	$("#ucase").css("color","#FF0004");
    //}

    //if(lcase.test($("#password1").val())){
    //	$("#lcase").removeClass("glyphicon-remove");
    //	$("#lcase").addClass("glyphicon-ok");
    //	$("#lcase").css("color","#00A41E");
    //}else{
    //	$("#lcase").removeClass("glyphicon-ok");
    //	$("#lcase").addClass("glyphicon-remove");
    //	$("#lcase").css("color","#FF0004");
    //}

    //if(num.test($("#password1").val())){
    //	$("#num").removeClass("glyphicon-remove");
    //	$("#num").addClass("glyphicon-ok");
    //	$("#num").css("color","#00A41E");
    //}else{
    //	$("#num").removeClass("glyphicon-ok");
    //	$("#num").addClass("glyphicon-remove");
    //	$("#num").css("color","#FF0004");
    //}

    if ($("#password1").val() == $("#password2").val()) {
        $("#pwmatch").removeClass("glyphicon-remove");
        $("#pwmatch").addClass("glyphicon-ok");
        $("#pwmatch").css("color", "#00A41E");
    } else {
        $("#pwmatch").removeClass("glyphicon-ok");
        $("#pwmatch").addClass("glyphicon-remove");
        $("#pwmatch").css("color", "#FF0004");
    }
});</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript">
    $(function () {
        $("#btnSubmit").click(function () {
            var password = $("#password1").val();
            var confirmPassword = $("#password2").val();
            if (password.length <= 4) {
                alert("Passwords must long than 4 char.");
                return false;
            }
            if (password != confirmPassword) {
                alert("Passwords do not match.");
                return false;
            }
            return true;
        });
    });
</script>