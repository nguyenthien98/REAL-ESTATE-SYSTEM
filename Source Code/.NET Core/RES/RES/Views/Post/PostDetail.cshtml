@using RES.Data.DBModels
@using RES.Models.Common
@model Post
@{
    ViewData["Title"] = "Chi tiết | Bất động sản Miền Trung";
    RealEstateSystemContext db = new RealEstateSystemContext();
}

<!-- Page top section -->
<section class="page-top-section set-bg" data-setbg="img/page-top-bg.jpg">
    <div class="container text-white">
        <h2>@Model.Tittle.ToUpper()</h2>
    </div>
</section>
<!--  Page top end -->
<!-- Breadcrumb -->
<div class="site-breadcrumb">
    <div class="container">
        <a href="@Url.Action("Index", "Home")"><i class="fa fa-home"></i>Home</a>
        <span><i class="fa fa-angle-right"></i>Chi tiết Bài đăng</span>
    </div>
</div>

<!-- Page -->
<section class="page-section">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 single-list-page">
                <div class="single-list-slider owl-carousel" id="sl-slider">

                    @{ List<PostImage> lstImage = db.PostImage.Where(n => n.PostId == Model.PostId).ToList();}

                    @if (Model.PostType == 1)
                    {
                        foreach (var image in lstImage)
                        {
                            <div class="sl-item set-bg" data-setbg="@(Constants.POST_IMG_URL + image.Url)">
                                <div class="sale-notic">Cần bán</div>
                            </div>
                        }
                    }
                    else
                    {
                        foreach (var image in lstImage)
                        {
                            <div class="sl-item set-bg" data-setbg="@(Constants.POST_IMG_URL + image.Url)">
                                <div class="rent-notic">Cần cho thuê</div>
                            </div>
                        }
                    }
                </div>
                <div class="owl-carousel sl-thumb-slider" id="sl-slider-thumb">
                    @foreach (var image in lstImage)
                    {
                        <div class="sl-thumb set-bg" data-setbg="@(Constants.POST_IMG_URL + image.Url)"></div>
                    }
                </div>
                <div class="single-list-content">
                    <div class="row">
                        <div class="col-xl-8 sl-title">
                            <h2>@CommonFunction.getDetailAddress(Model.Location)</h2>
                            <p><i class="fa fa-map-marker"></i>@CommonFunction.getAddress(Model.Location)</p>
                        </div>
                        <div class="col-xl-4">
                            @if (Model.PostType == 1)
                            {
                                <a href="#" class="price-btn">@string.Format("{0:0,0 VND}", Model.Price)</a>
                            }
                            else
                            {
                                <a href="#" class="price-btn">@string.Format("{0:0,0 VND / tháng}", Model.Price)</a>
                            }
                        </div>

                        <div class="col-xl-12 mb-5">
                            <div class="fb-like" data-href="http://realestate-ute.azurewebsites.net/@Model.PostId" data-width="" data-layout="standard" data-action="like" data-size="small" data-show-faces="true" data-share="true"></div>
                        </div>
                    </div>
                    @if (Model.Detail != null)
                    {
                        <h3 class="sl-sp-title">Thông tin chi tiết</h3>
                        <div class="row property-details-list">
                            <div class="col-md-4 col-sm-6">
                                <p><i class="fa fa-th-large"></i> Hướng @db.Direction.First(n => n.DirectionId == db.Detail.First(c => c.DetailId == Model.Detail).DirectionId).DirectionName</p>
                                <p><i class="fa fa-bed"></i> @db.Detail.First(c => c.DetailId == Model.Detail).Bedroom phòng ngủ</p>
                                <p><i class="fa fa-user"></i> @(db.Customer.First(c => c.CustomerId == Model.AuthorId).LastName + " " + db.Customer.First(c => c.CustomerId == Model.AuthorId).Firstname)</p>
                            </div>
                            <div class="col-md-4 col-sm-6">
                                <p><i class="fa fa-car"></i> @(db.Detail.First(c => c.DetailId == Model.Detail).Alley == true ? "Trong hẻm" : "Mặt đường lớn")</p>
                                <p><i class="fa fa-building-o"></i> @db.Detail.First(c => c.DetailId == Model.Detail).Floor lầu</p>
                                <p><i class="fa fa-clock-o"></i> @CommonFunction.GetTimeOfPost(Model.PostTime)</p>
                            </div>
                            <div class="col-md-4">
                                <p><i class="fa fa-bath"></i> @db.Detail.First(c => c.DetailId == Model.Detail).Bathroom phòng tắm</p>
                                <p><i class="fa fa-trophy"></i> @(Model.PostType == 1 ? "Nhà bán" : "Nhà cho thuê")</p>
                            </div>
                        </div>
                    }
                    else
                    {
                        <h3 class="sl-sp-title">Thông tin chi tiết</h3>
                        <div class="row property-details-list">
                            <div class="col-md-6 col-sm-6">
                                <p><i class="fa fa-building-o"></i> @db.RealEstateType.First(n => n.RealEstateTypeId == Model.RealEstaleType).Name</p>
                                <p><i class="fa fa-user"></i> @(db.Customer.First(c => c.CustomerId == Model.AuthorId).LastName + " " + db.Customer.First(c => c.CustomerId == Model.AuthorId).Firstname)</p>
                            </div>
                            <div class="col-md-6 col-sm-6">
                                <p><i class="fa fa-th-large"></i>@Model.Area m&sup2;</p>
                                <p><i class="fa fa-clock-o"></i> @CommonFunction.GetTimeOfPost(Model.PostTime)</p>
                            </div>
                        </div>
                    }
                    <h3 class="sl-sp-title">Mô tả</h3>
                    <div class="description">
                        <p>@Model.Description</p>
                    </div>

                    <h3 class="sl-sp-title bd-no">Location</h3>
                    <div id="map"></div>
                </div>
            </div>
            <!-- sidebar -->
            <div class="col-lg-4 col-md-7 sidebar">
                <div class="author-card">
                    @{ string imgName = Model.Author.AvatarUrl; }
                    <div class="author-img set-bg" data-setbg="@(Constants.AVATAR_URL + imgName)"></div>
                    <div class="author-info">
                        <h5>@(Model.Author.LastName + " " + Model.Author.Firstname)</h5>
                        <p>Real Estate Agent</p>
                    </div>
                    <div class="author-contact">
                        <p><i class="fa fa-phone"></i> @(String.Format("{0:0### ### ###}", Model.Author.PhoneNumber))</p>
                        <p><i class="fa fa-envelope"></i>@Model.Author.Email</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-8 single-list-page">
                <div class="fb-comments" data-href="http://realestate-ute.azurewebsites.net/@Model.PostId" data-width="" data-numposts="10"></div>
            </div>
        </div>
    </div>
</section>
<!-- Page end -->
<!-- load for map -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<script>


    //$(document).ready(function () {
    //    initAutocomplete();
    //});

    function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: -33.8688, lng: 151.2195 },
            zoom: 15,
            mapTypeId: 'roadmap'
        });

        var geocoder = new google.maps.Geocoder();

        geocoder.geocode({ 'address': $("<div>").html("@Model.Location").text() }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
                var marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAV6dcVxUDSUS_09lE9FzTv6qilBs32qOA&libraries=places&callback=initAutocomplete"
        async defer></script>